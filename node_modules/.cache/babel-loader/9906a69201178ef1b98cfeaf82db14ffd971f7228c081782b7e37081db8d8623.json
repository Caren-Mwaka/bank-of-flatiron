{"ast":null,"code":"var _jsxFileName = \"/home/caren/moringa/phase-2/code-challenges/bank-of-flatiron/src/Form.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker'; //mported react-datepicker and used its <DatePicker> component instead of a regular input for the date\nimport 'react-datepicker/dist/react-datepicker.css';\nimport SubmitButton from './Submit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  AddTransaction\n}) => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  // Initialize date state with current date\n\n  const [description, setDescription] = useState('');\n  //created a state variable called description to track the description and hold the current value of the description.\n  // a function called setDescription to change/update the state and set the initial value to an empty string.\n\n  const [category, setCategory] = useState('');\n  const [amount, setAmount] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      date,\n      description,\n      category,\n      amount\n    };\n    //creating a new transaction object using the current values of the date, description, category and amount state variables.\n    AddTransaction(newTransaction);\n    //  Calls the AddTransaction function, which is passed down to the Form component as a prop. \n    //  It passes the newTransaction object as an argument to this function\n    //  This adds the new transaction to the list of transactions in the parent component.\n\n    // resetting the form state after the transaction has been added\n    setDate(new Date());\n    setDescription('');\n    setCategory('');\n    setAmount('');\n  };\n  const handleDateChange = date => {\n    setDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: date.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n        // allows a change by triggering the setDescription function and updates it with whatever the user is trying to change it to.\n        // the update occurs by accessing the event object, through the target which is the input element and the value which the user types into it.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category\",\n        value: category,\n        onChange: e => setCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"PB5ubdoomkWF+ZCOzcRI4ETtGII=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","DatePicker","SubmitButton","jsxDEV","_jsxDEV","Form","AddTransaction","_s","date","setDate","Date","description","setDescription","category","setCategory","amount","setAmount","handleSubmit","e","preventDefault","newTransaction","handleDateChange","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","toString","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/home/caren/moringa/phase-2/code-challenges/bank-of-flatiron/src/Form.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react' \nimport DatePicker from 'react-datepicker';//mported react-datepicker and used its <DatePicker> component instead of a regular input for the date\nimport 'react-datepicker/dist/react-datepicker.css';\nimport SubmitButton from './Submit';\n\nconst Form = ({AddTransaction}) => {\n  const [date, setDate] = useState(new Date()); \n  // Initialize date state with current date\n\n  const [description, setDescription] = useState('');\n  //created a state variable called description to track the description and hold the current value of the description.\n  // a function called setDescription to change/update the state and set the initial value to an empty string.\n\n  const [category, setCategory] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleSubmit = (e) => {\n     e.preventDefault();\n     const newTransaction = {date, description, category, amount}\n     //creating a new transaction object using the current values of the date, description, category and amount state variables.\n     AddTransaction(newTransaction);\n    //  Calls the AddTransaction function, which is passed down to the Form component as a prop. \n    //  It passes the newTransaction object as an argument to this function\n    //  This adds the new transaction to the list of transactions in the parent component.\n\n    // resetting the form state after the transaction has been added\n     setDate(new Date());\n     setDescription('');\n     setCategory('')\n     setAmount('');\n     \n  }\n  const handleDateChange = (date) => {\n    setDate(date);\n  };\n\n\n  return (\n    <div className='form'>\n        <form onSubmit={handleSubmit}>\n             <label>Date: </label>\n             {/* React-datepicker component */}\n             <div>{date.toString()}</div>\n             {/* The selected attribute is used to control the selected date\n             The onChange event handler is used to update the date state when the user selects a new date from the dropdown calendar. */}\n             <input type=\"text\" placeholder='Description' value={description} \n              onChange={(e) => setDescription(e.target.value)}\n              // allows a change by triggering the setDescription function and updates it with whatever the user is trying to change it to.\n              // the update occurs by accessing the event object, through the target which is the input element and the value which the user types into it.\n             />\n             {/* value is equal to a dynamic value which is the description state*/}\n             <input type=\"text\" placeholder='Category' value={category}\n             onChange={(e) => setCategory(e.target.value)}\n             />\n             <input type=\"number\" placeholder='Amount' value={amount}\n             onChange={(e) => setAmount(e.target.value)}\n             />\n              <div>\n               {/* Render the SubmitButton component and pass handleSubmit as onClick prop */}\n              <SubmitButton onClick={handleSubmit} />\n              </div>\n        </form>\n    </div>\n  )\n}\n\nexport default Form"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}