{"ast":null,"code":"var _jsxFileName = \"/home/caren/moringa/phase-2/code-challenges/bank-of-flatiron/src/Form.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [description, setDescription] = useState('');\n  //created a state called description to track the description and a funcction called setDescription to change the state and set the initial value to an empty string.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      on: true,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n        // allows a change by triggering the setDescription function and updates it with whatever the user is trying to change it to.\n        // the update occurs by accessing the event object, through the target which is the input element and the value which the user types into it.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"T5v5dRzedMK18tfGxj2rihBX8Sg=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","description","setDescription","className","children","on","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/caren/moringa/phase-2/code-challenges/bank-of-flatiron/src/Form.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nconst Form = () => {\n  const [description, setDescription] = useState('');\n  //created a state called description to track the description and a funcction called setDescription to change the state and set the initial value to an empty string.\n  return (\n    <div className='form'>\n        <form on>\n             <label>Date</label>\n             <input type=\"text\" \n             />\n             <input type=\"text\" placeholder='Description' value={description} \n              onChange={(e) => setDescription(e.target.value)}\n              // allows a change by triggering the setDescription function and updates it with whatever the user is trying to change it to.\n              // the update occurs by accessing the event object, through the target which is the input element and the value which the user types into it.\n             />\n             {/* value is equal to a dynamic value which is the description state*/}\n             <input type=\"text\" placeholder='Category'/>\n             <input type=\"text\" placeholder='Amount' />\n        </form>\n    </div>\n  )\n}\n\nexport default Form"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA,oBACEE,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjBN,OAAA;MAAMO,EAAE;MAAAD,QAAA,gBACHN,OAAA;QAAAM,QAAA,EAAO;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBX,OAAA;QAAOY,IAAI,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACFX,OAAA;QAAOY,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,aAAa;QAACC,KAAK,EAAEX,WAAY;QAC/DY,QAAQ,EAAGC,CAAC,IAAKZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;QAC9C;QACA;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEFX,OAAA;QAAOY,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3CX,OAAA;QAAOY,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAT,EAAA,CApBKD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAsBV,eAAeA,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}